not 演算子をブーリアン値 (True, False) の前につけると、真偽値を裏返すことができます。

A の値	not A の値
True	False
False	True
次のコードは、「変数 x の値が 10 ではない」ことを 2 通りの方法で確かめるものです。

x = 20 # x の値は 20
print(x != 10) # 「x の値は 10 ではない」 の真偽値を返す
print(not(x == 10)) # 「x の値は 10 である」 の真偽値と逆の値を返す
not 演算子はブーリアン型の値の前につけることに注意してください。

問題文
整数 num が標準入力で与えられます。

num が次の条件を満たさない場合は Yes を、そうでない場合は No を出力するプログラムを作成して下さい。

num は 2 または 3 または 5 の倍数である
入力形式について
入出力例
入力例 1
25
出力例 1
No
25 は 2 や 3 の倍数ではありませんが 5 の倍数であるため、条件を満たします。

したがって、No と出力します。

入力例 2
53

出力例 2
Yesnot 演算子をブーリアン値 (True, False) の前につけると、真偽値を裏返すことができます。

A の値	not A の値
True	False
False	True
次のコードは、「変数 x の値が 10 ではない」ことを 2 通りの方法で確かめるものです。

x = 20 # x の値は 20
print(x != 10) # 「x の値は 10 ではない」 の真偽値を返す
print(not(x == 10)) # 「x の値は 10 である」 の真偽値と逆の値を返す
not 演算子はブーリアン型の値の前につけることに注意してください。

問題文
整数 num が標準入力で与えられます。

num が次の条件を満たさない場合は Yes を、そうでない場合は No を出力するプログラムを作成して下さい。

num は 2 または 3 または 5 の倍数である
入力形式について
入力は次の形式で与えてください。

n
u
m
num
つまり、 num の 1 行だけからなる入力を与えてください。

ただし、num の値は 1 以上 100 以下とします。

入出力例
入力例 1
25
出力例 1
No
25 は 2 や 3 の倍数ではありませんが 5 の倍数であるため、条件を満たします。

したがって、No と出力します。

入力例 2
53
出力例 2
Yes